# Define pipeline stages
stages:
  - build
  - deploy

# Build job
build-backend:
  stage: build
  image: node:20
  script:
    - echo "Checking for Dockerfile..."
    - ls -la
    - echo "Installing backend dependencies..."
    - npm install
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 week
  only:
    - main
    - develop

# Deploy job
deploy-backend:
  stage: deploy
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--insecure-registry=git.clp.kr:5050", "--debug"]
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_STARTUP_TIMEOUT: 120
  before_script:
    # Install OpenSSH client if not already present
    - echo "Installing OpenSSH client..."
    - apt-get update -y && apt-get install -y openssh-client

    # Start ssh-agent if not already running
    - eval $(ssh-agent -s)

    # Ensure the .ssh directory exists
    - mkdir -p /home/gitlab-runner/.ssh
    - mkdir -p /home/gitlab-runner/.ssh/id_rsa

    - chmod 700 /home/gitlab-runner/.ssh
    - chmod 600 /home/gitlab-runner/.ssh/id_rsa

    # Copy existing private key for SSH
    - cat /home/gitlab-runner/.ssh/id_rsa > /home/gitlab-runner/.ssh/key.pem
    - chmod 600 /home/gitlab-runner/.ssh/key.pem
    - ssh-keyscan -H ec2-44-203-85-14.compute-1.amazonaws.com >> /home/gitlab-runner/.ssh/known_hosts

    # Docker login for the private registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY

  script:
    # Build and Push Docker
    - echo "Building Docker image..."
    - docker build -t $CI_REGISTRY_IMAGE/backend:latest -f ./DockerFile .
    - echo "Pushing Docker image to the registry..."
    - docker push $CI_REGISTRY_IMAGE/backend:latest

    # Test SSH connection before deploying
    - echo "Testing SSH connection..."
    - ssh -i /home/gitlab-runner/.ssh/key.pem -o StrictHostKeyChecking=no ubuntu@ec2-44-203-85-14.compute-1.amazonaws.com "echo 'SSH connection successful!'"

    # SSH into EC2 instance and deploy with root privileges
    - echo "Deploying backend to EC2..."
    - ssh -i /home/gitlab-runner/.ssh/key.pem -o StrictHostKeyChecking=no ubuntu@ec2-44-203-85-14.compute-1.amazonaws.com "
      cd /home/ubuntu/wavetrack-server &&
      git pull origin develop &&
      docker pull $CI_REGISTRY_IMAGE/backend:latest &&
      docker-compose -f /home/ubuntu/wavetrack-server/docker-compose.yml up -d --build
      "

  environment:
    name: production
    url: https://web.vottamean.com/api/v1
  only:
    - main
    - develop
