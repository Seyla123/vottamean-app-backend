# Define image
image: node:20

# Define pipeline stages
stages:
  - build
  - deploy

# Define variables
variables:
  PRODUCTION_DOMAIN: hexcode.anbschool.org/api/v1
  DEPLOY_USER: ubuntu
  DEPLOY_HOST: 13.212.6.189
  SSH_EC2_PRIVATE_KEY: $SSH_EC2_PRIVATE_KEY
  DIST_DEPLOY_PATH: /home/ubuntu/backend/

# Build job
build-backend:
  stage: build
  script:
    - npm install
  artifacts:
    paths:
      - ./node_modules
  only:
    - develop
    - main

# Deploy job
deploy-backend:
  stage: deploy
  environment:
    name: production
    url: https://$PRODUCTION_DOMAIN
  before_script:
    - apt-get update -y && apt-get install -y openssh-client rsync
    - eval $(ssh-agent -s)
    - echo "$SSH_EC2_PRIVATE_KEY" | tr -d '\r' > private_key.pem
    - chmod 400 private_key.pem
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts

  script:
    - echo "Deploying to EC2 staging..."

    # Method 1: Use rsync to copy the project to EC2
    - rsync -avz -e "ssh -i private_key.pem" ./ ubuntu@$DEPLOY_HOST:$DIST_DEPLOY_PATH || echo "Rsync failed, attempting git pull"

    # Method 2: SSH into the EC2 instance and pull the latest branch if rsync fails
    - ssh -i "private_key.pem" ubuntu@$DEPLOY_HOST "
        cd $DIST_DEPLOY_PATH || exit 1
        echo 'Pulling latest changes from the repository...'
        git reset --hard
        git clean -fd
        git pull origin develop || git pull origin main
        npm install
        echo 'Deployment complete!'
        ls -l $DIST_DEPLOY_PATH
        sudo systemctl restart backend.service &&
        sudo systemctl status backend.service
      "
      
  only:
    - develop
    - main

